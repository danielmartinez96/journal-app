{"version":3,"sources":["firebase/firebase-config.js","helpers/loadNotes.js","types/types.js","helpers/fileUpload.js","actions/notesActions.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","actions/uiActions.js","actions/authActions.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["process","firebaseConfig","apiKey","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_ID","firebase","initializeApp","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","loadNotes","uid","a","collection","get","notesSnap","notes","console","log","forEach","snapHijo","push","id","data","types","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","secure_url","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","imageUrl","noteToFS","doc","update","refreshNote","Swal","fire","title","message","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","hadleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","handleChangeInput","activeId","useRef","useEffect","current","placeholder","src","alt","delete","startDeleting","NothingSelected","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","error","logout","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","flex","LoginScreen","loading","ui","handleInputChange","onSubmit","preventDefault","autoComplete","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PublicRoute","isLoggedIn","Component","rest","props","PrivateRoute","AppRouter","checking","setChecking","setIsLoggedIn","onAuthStateChanged","reducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8d21a517.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nconst {\r\n  REACT_APP_API_KEY,\r\n  REACT_APP_AUTH_DOMAIN,\r\n  REACT_APP_PROJECT_ID,\r\n  REACT_APP_STORAGE_BUCKET,\r\n  REACT_APP_MESSAGING_SENDER_ID,\r\n  REACT_APP_ID}=process.env;\r\n// Your web app's Firebase configuration\r\n\r\nconst firebaseConfig = {\r\n    apiKey: REACT_APP_API_KEY,\r\n    authDomain: REACT_APP_AUTH_DOMAIN,\r\n    projectId: REACT_APP_PROJECT_ID,\r\n    storageBucket: REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: REACT_APP_ID\r\n  };\r\n  \r\n\r\n\r\n  // Initialize Firebase\r\n    \r\n     firebase.initializeApp(firebaseConfig);\r\n  \r\n    const db = firebase.firestore();\r\n    const googleAuthProvider= new firebase.auth.GoogleAuthProvider();\r\n  \r\n\r\nexport{\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { db } from \"../firebase/firebase-config\";\r\n\r\nexport const loadNotes = async (uid)=>{\r\n    try {\r\n        const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n        const notes = [];\r\n        console.log(notesSnap)\r\n        notesSnap.forEach(snapHijo=>{\r\n            notes.push({\r\n                id:snapHijo.id,\r\n                ...snapHijo.data()\r\n            })\r\n        })\r\n        \r\n        return notes;\r\n    } catch (error) {\r\n        console.log(\"hola 2\")\r\n    }\r\n}\r\n","export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    \r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n    \r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load note',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n}","export const fileUpload = async (file)=>{\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dbtnpccrb/upload';\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file',file);\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl,{\r\n            method:\"POST\",\r\n            body:formData\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const {secure_url}= await resp.json();\r\n            return secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n        \r\n    } catch (err) {\r\n        return null;\r\n    }\r\n    // return url de la imagen\r\n}","import { db } from \"../firebase/firebase-config\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id, newNote));\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n\r\n            const notes = await loadNotes(uid);\r\n\r\n            dispatch(setNotes(notes))\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }   \r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        try {\r\n            const { uid } = getState().auth;\r\n            if (!note.imageUrl) delete note.imageUrl;\r\n\r\n            const noteToFS = { ...note };\r\n            delete noteToFS.id;\r\n\r\n\r\n            await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFS);\r\n            dispatch(refreshNote(note.id, noteToFS));\r\n            Swal.fire('Saved', note.title, 'success');\r\n        } catch (error) {\r\n            Swal.fire('Error', error.message, 'error');\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUploading = (file) => {\r\n    return async (dispatch, getState) => {\r\n        const { active: note } = getState().notes;\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n        const fileUrl = await fileUpload(file);\r\n\r\n        note.imageUrl = fileUrl;\r\n        dispatch(startSaveNote(note));\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async (dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const cleaningLogoutNote = () => ({\r\n    type: types.notesLogoutCleaning\r\n})","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState={}) => {\r\n    \r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = (newFormState=initialState) =>{\r\n        setValues(newFormState);\r\n    }\r\n    const hadleInputChange = ({target}) =>{\r\n        \r\n        setValues({     \r\n            ...values,\r\n            [target.name]:target.value \r\n        })\r\n    }\r\n\r\n    return [values,hadleInputChange,reset];\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notesActions';\r\n\r\nexport const NotesAppBar = () => {\r\n    const dispatch = useDispatch();\r\n    const {active} = useSelector(state => state.notes)\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active))\r\n    }\r\n    const handlePicture = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if(file){\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n    \r\n    \r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto 2020</span>\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display:'none'}}\r\n                onChange={handleFileChange}\r\n            />\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handlePicture}\r\n                >\r\n                    Picture\r\n                </button>\r\n             \r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notesActions'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { active:note } = useSelector(state => state.notes)\r\n    // const [valueForm,handleChangeInput] = useForm({...rest})\r\n    const [formValues, handleChangeInput, reset] = useForm(note)\r\n    const { title, body,id } = formValues;\r\n    const activeId = useRef(note.id);\r\n    useEffect(() => {\r\n        if(note.id !== activeId.current){\r\n            reset();\r\n            activeId.current = note.id;\r\n        }\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(formValues.id,{...formValues}));\r\n    }, [formValues,dispatch]);\r\n\r\n    const handleDeleteNote = () => {\r\n        dispatch(startDeleting(id));\r\n    }\r\n    \r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleChangeInput}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happend today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleChangeInput}\r\n                ></textarea>\r\n                {\r\n                    (note.imageUrl)\r\n                    && (<div className=\"notes__image\">\r\n                        <img\r\n                            src={note.imageUrl}\r\n                            alt=\"imagen\"\r\n                        />\r\n                    </div>)\r\n                }\r\n            </div>\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={handleDeleteNote}\r\n            >\r\n                DELETE\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br/>\r\n                or create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notesActions';\r\n\r\nexport const JournalEntry = ({\r\n    id,\r\n    title,\r\n    body,\r\n    imageUrl,\r\n    date\r\n}) => {\r\n    const noteDate= moment(date);\r\n    const dispatch = useDispatch()\r\n    const handleActiveNote = () => {\r\n        dispatch(activeNote(id,{\r\n            title,\r\n            body,\r\n            imageUrl,\r\n            date\r\n        }))\r\n    }\r\n    \r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeInUp animate__faster\"\r\n            onClick={handleActiveNote}\r\n        >\r\n            <div \r\n                className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize:'cover',\r\n                    backgroundImage:`url(${imageUrl})`                    \r\n                }}\r\n            ></div>\r\n            <div className=\"jornal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}                  \r\n                </p>\r\n\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('DD')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes} = useSelector(state => state.notes)\r\n    \r\n    return (\r\n        <div className=\"journal__entries animate__animated animate__wobble animate__faster \">\r\n            {\r\n                notes.map(note=>(\r\n                <JournalEntry \r\n                    key={note.id}\r\n                    {...note}    \r\n                />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) =>({\r\n    type:types.uiSetError,\r\n    payload:err\r\n})\r\n\r\nexport const removeError = () =>({\r\n    type:types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = ()=>({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = ()=>({\r\n    type: types.uiFinishLoading\r\n})","import { types } from \"../types/types\"\r\nimport {firebase, googleAuthProvider} from '../firebase/firebase-config'    \r\nimport { finishLoading, startLoading } from \"./uiActions\";\r\nimport Swal from 'sweetalert2';\r\nimport { cleaningLogoutNote } from \"./notesActions\";\r\nexport const startLoginEmailPassword = (email,password)=>{\r\n    return(dispatch)=>{\r\n        dispatch(startLoading());\r\n        firebase.auth().signInWithEmailAndPassword(email,password)\r\n            .then(({user})=>{\r\n                \r\n                dispatch(login(user.uid,user.displayName));\r\n                dispatch(finishLoading());\r\n            })\r\n            .catch(error=>{\r\n                dispatch(finishLoading());\r\n                Swal.fire('Error',error.message,'error');\r\n            });\r\n        \r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName =(email,password,name)=>{\r\n    return (dispatch)=>{\r\n        firebase.auth().createUserWithEmailAndPassword(email,password)\r\n            .then(async ({user})=>{\r\n                await user.updateProfile({displayName:name});\r\n\r\n                dispatch(\r\n                    login(user.uid,user.displayName)\r\n                )\r\n            })\r\n            .catch(error=>{\r\n                Swal.fire('Error',error.message,'error');\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport const startGoogleLogin = () =>{\r\n    return(dispatch)=>{\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({user}) =>{\r\n                dispatch(\r\n                    login(user.uid,user.displayName)\r\n                )\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport const login = (uid,displayName) =>({\r\n        type:types.login,\r\n        payload:{\r\n            uid,\r\n            displayName\r\n        }\r\n});\r\n\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) =>{\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch(logout());\r\n        dispatch(cleaningLogoutNote());\r\n    }\r\n}\r\n\r\nexport const logout = () =>({\r\n    type: types.logout\r\n})\r\n\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { JournalEntries } from './JournalEntries'\r\nimport {startLogout} from '../../actions/authActions'\r\nimport { startNewNote } from '../../actions/notesActions'\r\nexport const Sidebar = () => {\r\n\r\n    const {name} = useSelector(state => state.auth);\r\n    const dispatch = useDispatch()\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n    const handleAddNew= () =>{\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n    const {active} =useSelector(state=> state.notes);\r\n    return (\r\n        \r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <Sidebar />\r\n\r\n            <main style={{\r\n                flex:\"1 1 auto\"\r\n            }}>\r\n                {\r\n                    (active)\r\n                        ?<NoteScreen/>\r\n                        :<NothingSelected/>\r\n                }\r\n            </main> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/authActions'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const {loading} = useSelector(state => state.ui);\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: 'daniel@gmail.com',\r\n        password: '123456'\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email, password));\r\n        \r\n    }\r\n\r\n    const handleGoogleLogin =()=>{\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n                onSubmit={handleLogin}\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    className=\"btn btn-primary btn-block\"\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n                <hr />\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link\r\n                    className=\"link\"\r\n                    to=\"/auth/register\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport validator from 'validator'\r\nimport { removeError, setError } from '../../actions/uiActions'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/authActions'\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    /*\r\n    {\r\n        name:'Daniel',\r\n        email:'daniel@gmail.com',\r\n        password:'123456',\r\n        password2:'123456'\r\n    }\r\n    */\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector(state => state.ui);\r\n\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: 'Daniel',\r\n        email: 'daniel@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isFormValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if (name.trim().length === 0) {\r\n            dispatch(setError(\"name is required\"));\r\n            return false\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError(\"email is no valid\"));\r\n            return false\r\n        } else if (password !== password2 || password < 5) {\r\n            dispatch(setError(\"Password should be at least 6 characters and match each other\"));\r\n            return false\r\n        }\r\n\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            {\r\n                msgError && (\r\n                    <div className=\"auth__alert-error\">\r\n                        {msgError}\r\n                    </div>\r\n                )\r\n            }\r\n            <form\r\n                onSubmit={handleRegister}\r\n                className=\"animate__animated animate__fadeIn  animate__faster\"\r\n            >\r\n\r\n                <input\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    type=\"text\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    className=\"auth__input\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    className=\"auth__input\"\r\n                    placeholder=\"Confirm\"\r\n                    name=\"password2\"\r\n                    type=\"password\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                    type=\"submit\"\r\n                >\r\n                    Create Account\r\n                </button>\r\n                <Link\r\n                    className=\"link \"\r\n                    to=\"/auth/login\"\r\n                >\r\n                    Already have a account?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route \r\n                        exact \r\n                        path=\"/auth/login\" \r\n                        component={LoginScreen} \r\n                    />\r\n                    \r\n                    <Route \r\n                        exact \r\n                        path=\"/auth/register\" \r\n                        component={RegisterScreen} \r\n                    />\r\n                    \r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isLoggedIn,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props)=>(\r\n                (!isLoggedIn)\r\n                    ? (<Component {...props}/>)\r\n                    : (<Redirect to=\"/\"/>)\r\n            )}\r\n        />\r\n            \r\n       \r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isLoggedIn,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props)=>(\r\n                (isLoggedIn)\r\n                    ? (<Component {...props}/>)\r\n                    : (<Redirect to=\"/auth/login\"/>)\r\n            )}\r\n        />\r\n            \r\n       \r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport {firebase} from '../firebase/firebase-config'\r\nimport { login } from '../actions/authActions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { startLoadingNotes } from '../actions/notesActions';\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async (user)=>{\r\n            if(user?.uid){\r\n                dispatch(login(user.uid,user.displayName));\r\n                setIsLoggedIn(true);\r\n                dispatch(startLoadingNotes(user.uid));\r\n            }else{\r\n                setIsLoggedIn(false);\r\n            }\r\n            setChecking(false);\r\n        });\r\n    }, [dispatch,setChecking,setIsLoggedIn])\r\n\r\n    if(checking){\r\n        return(\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        path=\"/auth\" \r\n                        component={AuthRouter} \r\n                        isLoggedIn={isLoggedIn}\r\n                    />\r\n                    \r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={JournalScreen}\r\n                        isLoggedIn={isLoggedIn} \r\n                    />\r\n\r\n                    <Redirect to=\"auth/login\"/>\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState={\r\n    loading:false,msgError:null\r\n}\r\n\r\nexport const uiReducer = (state= initialState,action)=>{\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError:action.payload\r\n            }            \r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError:null\r\n            }\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading:false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n/*\r\n    {\r\n        notes: [],\r\n        active:null,\r\n        active:{\r\n            id: 'salbpqwepweqw'\r\n            title: '',\r\n            body:'',\r\n            imageUrl: '',\r\n            date: 12123346456\r\n        }\r\n    }\r\n*/\r\nconst initialState = {\r\n    notes: [],\r\n    active:null\r\n}\r\nexport const notesReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return{\r\n                ...state,\r\n                active:{\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesAddNew:\r\n            return{\r\n                ...state,\r\n                notes:[action.payload,...state.notes]\r\n            }\r\n        case types.notesLoad:\r\n            return{\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        case types.notesUpdated:\r\n            return{\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id=== action.payload.id\r\n                        ?action.payload.note\r\n                        :note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return{\r\n                ...state,\r\n                active:null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n        case types.notesLogoutCleaning:\r\n            return{\r\n                ...state,\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state; \r\n    }\r\n}","import {createStore,combineReducers, applyMiddleware,compose} from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","\r\n// {\r\n    // uid: asdasdasdasdasdasdasd,\r\n    // name: 'Daniel'\r\n// }\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nexport const authReducer=(state={},action)=>{\r\n\r\n    switch(action.type){\r\n        case types.login:\r\n            return{\r\n                uid:action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return{}\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport {Provider} from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}